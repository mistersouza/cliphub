{"version":3,"file":"static/js/148.224a1699.chunk.js","mappings":"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","sources":["components/NoResults.js","components/clips/ClipPreview.js","components/EditFollowButton.js","components/profiles/UserProfile.js"],"sourcesContent":["// Icons imports\nimport { MdOutlineVideocamOff } from 'react-icons/md';\nimport { BiCommentX } from 'react-icons/bi';\n\nconst NoResults = ({ message, noClips, noComments }) => {\n  return (\n    <div\n      className=\"\n        flex flex-col justify-center items-center text-gray-800 gap-1 \n        w-full h-full\n      \"\n    >\n      {noClips && <MdOutlineVideocamOff className=\"text-8xl\" />}\n      {noComments && <BiCommentX className=\"text-7xl\" />}\n      <p className=\"text-sm text-gray-500\">{message}</p>\n    </div>\n  );\n};\n\nexport default NoResults;\n","// React imports\nimport { useState, useRef } from 'react';\n// Dependacies imoprts\nimport { Link } from 'react-router-dom';\n// Icons imports\nimport { BsPlay } from 'react-icons/bs';\n\nconst ClipPreview = ({ clip }) => {\n  const [isHovered, setIsHovered] = useState(false);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const clipRef = useRef(null);\n\n  const handlePlaybackClick = () => {\n    clipRef?.current[isPlaying ? 'pause' : 'play']();\n    setIsPlaying((prev) => !prev);\n    setIsHovered((prev) => !prev);\n  };\n\n  if (!clip) return null;\n\n  return (\n    <Link className=\"w-fit mx-auto\" to={`/clips/${clip.id}`} key={clip.id}>\n      <div\n        className=\"relative bg-cover bg-center h-80 lg:h-60 rounded\"\n        onMouseEnter={handlePlaybackClick}\n        onMouseLeave={handlePlaybackClick}\n      >\n        <video\n          ref={clipRef}\n          className=\"w-full max-w-[200px] h-full object-cover rounded\"\n          loop\n        >\n          <source src={clip.clip} type=\"video/mp4\" />\n          Your browser does not support video tags :/\n        </video>\n        {isHovered && (\n          <div\n            className=\"absolute inset-0 flex items-center justify-between \n              rounded p-1 bg-black bg-opacity-50\"\n          >\n            <div\n              className={`${\n                !clip.views_count > 0\n                  ? 'hidden'\n                  : 'absolute bottom-3 right-3 flex items-center text-gray-50'\n              }`}\n            >\n              <BsPlay className=\"text-2xl\" />\n              <span className=\"text-lg\">{clip.views_count}</span>\n            </div>\n          </div>\n        )}\n      </div>\n      <p className=\"p-1.5 text-sm text-gray-500\">{clip.caption}</p>\n    </Link>\n  );\n};\n\nexport default ClipPreview;\n","// React imports\nimport { useContext } from 'react';\n// Icons imports\nimport { SlUserFollowing } from 'react-icons/sl';\n// Helpers imports\nimport { AppContext } from '../context/AppContext';\n\nconst EditFollowButton = ({ isOwner, profileId, followingId }) => {\n  const { handleFollowClick, handleUnfollowClick } = useContext(AppContext);\n  const isFollowed = !isOwner && Boolean(followingId);\n  const handleButtonClick = () => {\n    isOwner\n      ? console.log('Feature comming soon')\n      : isFollowed\n        ? handleUnfollowClick(followingId)\n        : handleFollowClick(profileId);\n  };\n  const ariaLabel = isOwner\n    ? 'Edit profile'\n    : isFollowed\n      ? 'Unfollow profile'\n      : 'Follow profile';\n\n  /**\n   * Returns the appropriate button styles based on ownership and follow status.\n   * @function getButtonStyles\n   * @returns {string} - A string of Tailwind CSS utility classes.\n   * Base styles are always included, with additional styles applied conditionally\n   */\n\n  const getButtonStyles = () => {\n    const baseStyles =\n      'flex items-center justify-between px-2.5 py-1 max-w-fit border rounded text-base';\n    const ownerStyles =\n      'bg-gray-800 text-gray-50 border-gray-800 hover:bg-transparent hover:text-gray-800';\n\n    if (isOwner) return `${baseStyles} ${ownerStyles}`;\n\n    return `${baseStyles} ${\n      isFollowed\n        ? 'bg-gray-200 text-gray-600 hover:bg-gray-300'\n        : `${ownerStyles}`\n    }`;\n  };\n\n  return (\n    <button\n      className={getButtonStyles()}\n      aria-label={ariaLabel}\n      onClick={handleButtonClick}\n    >\n      {isOwner ? (\n        'Edit profile'\n      ) : (\n        <span className=\"flex gap-1.5 items-center\">\n          {isFollowed ? (\n            <>\n              <SlUserFollowing /> Following\n            </>\n          ) : (\n            'Follow'\n          )}\n        </span>\n      )}\n    </button>\n  );\n};\n\nexport default EditFollowButton;\n","// React imports\nimport { useState, useEffect, useContext } from 'react';\n// Dependencies imports\nimport { useParams } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\n// Icons imports\nimport { GoVerified } from 'react-icons/go';\n// Components imports\nimport ClipPreview from '../clips/ClipPreview';\nimport EditFollowButton from '../EditFollowButton';\nimport NoResults from '../NoResults';\n// Helpers imports\nimport { AppContext } from '../../context/AppContext';\nimport { axiosRequest } from '../../api/axiosDefaults';\n\nconst UserProfile = () => {\n  const { id } = useParams();\n  const { profiles, setProfiles } = useContext(AppContext);\n  const [profileClips, setProfileClips] = useState({ results: [] });\n  const [clipsActive, setClipsActive] = useState(true);\n  const [likedActive, setLikedActive] = useState(false);\n  const [tab, setTab] = useState('clips');\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const { data: profile } = await axiosRequest.get(`/profiles/${id}/`);\n        setProfiles((prevProfiles) => ({\n          ...prevProfiles,\n          pageProfile: { results: [profile] },\n        }));\n\n        if (tab === 'clips') {\n          const { data: profileClips } = await axiosRequest.get(\n            `clips/?owner__profile=${profile.id}`\n          );\n          setProfileClips(profileClips);\n        }\n        if (tab === 'liked') {\n          const { data: likedClips } = await axiosRequest.get(\n            `clips/?likes__owner__profile=${profile.id}&ordering=-likes__created_at&`\n          );\n          setProfileClips(likedClips);\n        }\n      } catch (error) {\n        console.log('Error fetching user profile:', error);\n      }\n    })();\n  }, [id, tab]);\n  // Destructure page profile\n  const {\n    followers_count: followersCount,\n    following_count: followingCount,\n    following_id: followingId,\n    image,\n    id: profileId,\n    is_owner: isOwner,\n    name,\n    owner,\n  } = profiles.pageProfile.results[0] || {};\n\n  return (\n    <div>\n      <div className=\"flex items-center py-5\">\n        <Link to={`/profiles/${id}`}>\n          <div\n            className=\"\n              size-28 bg-no-repeat bg-center bg-cover rounded-full \n              cursor-pointer\n            \"\n            style={{ backgroundImage: `url(${image})` }}\n          ></div>\n        </Link>\n        <div className=\"flex flex-col gap-2\">\n          <div className=\"flex flex-col text-lg md:text-xl tracking-wider\">\n            <span className=\"flex items-center gap-1 font-semibold text-gray-800\">\n              @{owner} <GoVerified className=\"text-sm md:text-lg\" />\n            </span>\n            <span className=\"text-sm text-gray-400\">{name}</span>\n          </div>\n          <EditFollowButton\n            isOwner={isOwner}\n            profileId={profileId}\n            followingId={followingId}\n          />\n          <div className=\"flex gap-2 text-xs text-gray-500\">\n            <p>\n              <strong className=\"text-gray-800\">{followersCount || 0}</strong>{' '}\n              <span>Following</span>\n            </p>\n            <p>\n              <strong className=\"text-gray-800\">{followingCount || 0}</strong>{' '}\n              <span>Followers</span>\n            </p>\n          </div>\n        </div>\n      </div>\n      <div>\n        <div className=\"flex gap-2 border-b border-gray-200\">\n          <p\n            className={`\n              text-xl cursor-pointer text-gray-500 px-3.5 py-1.5 \n              hover:text-gray-800 ${\n                tab && clipsActive ? 'border-b-2 border-gray-800' : ''\n              }\n            `}\n            onClick={() => setTab('clips')}\n            onMouseEnter={() => {\n              setClipsActive(true);\n              setLikedActive(false);\n            }}\n            onMouseLeave={() => {\n              if (tab !== 'clips') {\n                setClipsActive(false);\n                setLikedActive(true);\n              }\n            }}\n          >\n            Clips\n          </p>\n          <p\n            className={`\n              text-xl cursor-pointer text-gray-500 px-3.5 py-1.5 \n              ${tab && likedActive ? 'border-b-2 border-gray-800' : ''}\n            `}\n            onClick={() => setTab('liked')}\n            onMouseEnter={() => {\n              setClipsActive(false);\n              setLikedActive(true);\n            }}\n            onMouseLeave={() => {\n              if (tab === 'clips') {\n                setClipsActive(true);\n                setLikedActive(false);\n              }\n            }}\n          >\n            Liked\n          </p>\n        </div>\n        <div className=\"flex flex-col gap-10 h-full py-10\">\n          {profileClips.results.length ? (\n            <div\n              className=\"grid grid-cols-1 p-2 justify-center \n                sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-3\"\n            >\n              {profileClips.results.map((clip) => (\n                <ClipPreview key={clip.id} clip={clip} />\n              ))}\n            </div>\n          ) : (\n            <NoResults message=\"No videos just yet :/\" noClips />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default UserProfile;\n"],"names":["_ref","message","noClips","noComments","_jsxs","className","children","_jsx","MdOutlineVideocamOff","BiCommentX","clip","isHovered","setIsHovered","useState","isPlaying","setIsPlaying","clipRef","useRef","handlePlaybackClick","current","prev","Link","to","id","onMouseEnter","onMouseLeave","ref","loop","src","type","views_count","BsPlay","caption","isOwner","profileId","followingId","handleFollowClick","handleUnfollowClick","useContext","AppContext","isFollowed","Boolean","ariaLabel","getButtonStyles","baseStyles","ownerStyles","onClick","handleButtonClick","console","log","_Fragment","SlUserFollowing","UserProfile","useParams","profiles","setProfiles","profileClips","setProfileClips","results","clipsActive","setClipsActive","likedActive","setLikedActive","tab","setTab","useEffect","data","profile","axiosRequest","get","prevProfiles","pageProfile","likedClips","error","followers_count","followersCount","following_count","followingCount","following_id","image","is_owner","name","owner","style","backgroundImage","GoVerified","EditFollowButton","length","map","ClipPreview","NoResults"],"sourceRoot":""}